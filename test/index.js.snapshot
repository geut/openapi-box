exports[`basic test > basic test cjs 1`] = `
"/* eslint-disable */\\n// This document was generated automatically by openapi-box\\n\\n/**\\n * @typedef {import('@sinclair/typebox').TSchema} TSchema\\n */\\n\\n/**\\n * @template {TSchema} T\\n * @typedef {import('@sinclair/typebox').Static<T>} Static\\n */\\n\\n/**\\n * @typedef {import('@sinclair/typebox').SchemaOptions} SchemaOptions\\n */\\n\\n/**\\n * @typedef {{\\n *  [Path in keyof typeof schema]: {\\n *    [Method in keyof typeof schema[Path]]: {\\n *      [Prop in keyof typeof schema[Path][Method]]: typeof schema[Path][Method][Prop] extends TSchema ?\\n *        Static<typeof schema[Path][Method][Prop]> :\\n *        undefined\\n *    }\\n *  }\\n * }} SchemaType\\n */\\n\\n/**\\n * @typedef {{\\n *  [ComponentType in keyof typeof _components]: {\\n *    [ComponentName in keyof typeof _components[ComponentType]]: typeof _components[ComponentType][ComponentName] extends TSchema ?\\n *      Static<typeof _components[ComponentType][ComponentName]> :\\n *      undefined\\n *  }\\n * }} ComponentType\\n */\\n\\nconst { Type: T, TypeRegistry, Kind } = require('@sinclair/typebox')\\nconst { Value } = require('@sinclair/typebox/value')\\n\\n/**\\n * @template {TSchema[]} T\\n * @typedef {{\\n *  [Kind]: 'UnionOneOf'\\n *  static: { [K in keyof T]: Static<T[K]> }[number]\\n *  oneOf: T\\n * } & TSchema} TUnionOneOf\\n */\\n\\n/**\\n * @template {TSchema[]} T\\n * @param {[...T]} oneOf\\n * @param {SchemaOptions} [options={}]\\n * @returns {TUnionOneOf<T>}\\n */\\nconst UnionOneOf = (oneOf, options = {}) => {\\n  /**\\n   * Checks if the value matches exactly one schema in the union.\\n   *\\n   * @param {TUnionOneOf<TSchema[]>} schema - The union schema to check against.\\n   * @param {unknown} value - The value to check.\\n   * @returns {boolean} True if the value matches exactly one schema, otherwise false.\\n   */\\n  function UnionOneOfCheck(schema, value) {\\n    return (\\n      1 ===\\n      schema.oneOf.reduce(\\n        (acc, schema) => (Value.Check(schema, value) ? acc + 1 : acc),\\n        0\\n      )\\n    )\\n  }\\n\\n  if (!TypeRegistry.Has('UnionOneOf'))\\n    TypeRegistry.Set('UnionOneOf', UnionOneOfCheck)\\n\\n  return /** @type {TUnionOneOf<typeof oneOf>} */ ({\\n    ...options,\\n    [Kind]: 'UnionOneOf',\\n    oneOf\\n  })\\n}\\n\\nconst cache = {}\\ncache['f40229273b744064836829fd7d98a527'] = {\\n  hello: T.Boolean()\\n}\\ncache['758696ec9f72013302034e82c22e0efb'] = {\\n  error: T.String()\\n}\\ncache['47d3d183ad8bb259a9f8325cf2ab2d5b'] = {\\n  name: T.String()\\n}\\ncache['b635c194e59c78028705df528dea77d7'] = T.String({ 'x-in': 'header' })\\ncache['255a61804302aa4bd8f117420add6257'] = {\\n  auth: cache['b635c194e59c78028705df528dea77d7']\\n}\\ncache['d51eef39907272763131bef48123fb66'] = T.String({ 'x-in': 'path' })\\ncache['9e360b975edf5daeacb6640803b6a4c7'] = {\\n  id: cache['d51eef39907272763131bef48123fb66']\\n}\\ncache['864edea74ad38eac3fa406501729a056'] = T.String({ 'x-in': 'query' })\\ncache['2809284b6e54d0d34017715ffe5636bd'] = T.String()\\ncache['06c090025e83070271cc497e44239ba7'] = T.Array(\\n  cache['2809284b6e54d0d34017715ffe5636bd'],\\n  { 'x-in': 'query' }\\n)\\ncache['c80c06529370bd2a6907120430728ec6'] = {\\n  deepTitle: T.Optional(T.String())\\n}\\ncache['d06bd94c06d00ee7cf3e2a89f0944180'] = T.Object(\\n  cache['c80c06529370bd2a6907120430728ec6'],\\n  {\\n    'x-in': 'query'\\n  }\\n)\\ncache['8da1342213edf1231cfe5f33446d81ee'] = {\\n  filter: cache['864edea74ad38eac3fa406501729a056'],\\n  address: cache['06c090025e83070271cc497e44239ba7'],\\n  deep: cache['d06bd94c06d00ee7cf3e2a89f0944180']\\n}\\ncache['c772fb62a277e4ea942c9eefaefb4655'] = [T.Literal('batman')]\\ncache['a3fe358f59464810fefa67ab749159a7'] = [T.Literal('joker')]\\ncache['8a48859dc4294a0307f483f076bba742'] = [\\n  T.Union(cache['c772fb62a277e4ea942c9eefaefb4655']),\\n  T.Union(cache['a3fe358f59464810fefa67ab749159a7'])\\n]\\ncache['f4b0f2ddbd1b2fbe02c10d8bd3dd3e37'] = {\\n  name: T.String(),\\n  age: T.Optional(T.Number()),\\n  gender: T.Union(cache['8a48859dc4294a0307f483f076bba742'])\\n}\\ncache['5066358f248daf33be676e893f6ad939'] = {\\n  title: T.String(),\\n  address: T.String()\\n}\\ncache['a4d5c21a651696fabb83fc7ba1c00c6d'] = T.Object(\\n  cache['5066358f248daf33be676e893f6ad939']\\n)\\ncache['1fe4d5edb2e4234b6fa4c15f6442088d'] = {\\n  human: T.Object(cache['f4b0f2ddbd1b2fbe02c10d8bd3dd3e37']),\\n  address: T.Array(cache['a4d5c21a651696fabb83fc7ba1c00c6d']),\\n  recursive: T.Object({})\\n}\\ncache['c31c87a08a18f5fd1f28efc42581b68a'] = {\\n  id: T.Optional(T.String())\\n}\\ncache['734381ed9db8585a070b030440190d32'] = {\\n  deepTitle: T.String()\\n}\\ncache['3a5ec6fa1d653f40ca7005bcd5e1f154'] = {\\n  filter: T.String(),\\n  address: T.Array(cache['2809284b6e54d0d34017715ffe5636bd']),\\n  deep: T.Object(cache['734381ed9db8585a070b030440190d32'])\\n}\\ncache['e28a00e55fde07ae47133be85f41bd04'] = {\\n  params: T.Object(cache['c31c87a08a18f5fd1f28efc42581b68a']),\\n  query: T.Object(cache['3a5ec6fa1d653f40ca7005bcd5e1f154']),\\n  body: T.Object(cache['1fe4d5edb2e4234b6fa4c15f6442088d'])\\n}\\n\\nconst schema = {\\n  '/hello': {\\n    GET: {\\n      args: T.Void(),\\n      data: T.Any({ 'x-status-code': '200' }),\\n      error: T.Union([T.Any({ 'x-status-code': 'default' })])\\n    }\\n  },\\n  '/hello-typed': {\\n    GET: {\\n      args: T.Void(),\\n      data: T.Object(cache['f40229273b744064836829fd7d98a527'], {\\n        'x-status-code': '200',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([\\n        T.Object(cache['758696ec9f72013302034e82c22e0efb'], {\\n          'x-status-code': '404',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    }\\n  },\\n  '/multiple-content': {\\n    GET: {\\n      args: T.Void(),\\n      data: T.Object(cache['47d3d183ad8bb259a9f8325cf2ab2d5b'], {\\n        'x-status-code': '200',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([\\n        T.Object(cache['758696ec9f72013302034e82c22e0efb'], {\\n          'x-status-code': '404',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    }\\n  },\\n  '/some-route/{id}': {\\n    POST: {\\n      args: T.Object({\\n        headers: T.Object(cache['255a61804302aa4bd8f117420add6257']),\\n        params: T.Object(cache['9e360b975edf5daeacb6640803b6a4c7']),\\n        query: T.Object(cache['8da1342213edf1231cfe5f33446d81ee']),\\n        body: T.Object(cache['1fe4d5edb2e4234b6fa4c15f6442088d'], {\\n          'x-content-type': 'application/json'\\n        })\\n      }),\\n      data: T.Object(cache['e28a00e55fde07ae47133be85f41bd04'], {\\n        'x-status-code': '201',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([T.Any({ 'x-status-code': 'default' })])\\n    }\\n  }\\n}\\n\\nconst _components = {\\n  schemas: {\\n    'def-0': T.Array(cache['a4d5c21a651696fabb83fc7ba1c00c6d'])\\n  }\\n}\\n\\nmodule.exports = { schema, components: _components }\\n"
`;

exports[`basic test > esm 1`] = `
"/* eslint-disable */\\n// This document was generated automatically by openapi-box\\n\\n/**\\n * @typedef {import('@sinclair/typebox').TSchema} TSchema\\n */\\n\\n/**\\n * @template {TSchema} T\\n * @typedef {import('@sinclair/typebox').Static<T>} Static\\n */\\n\\n/**\\n * @typedef {import('@sinclair/typebox').SchemaOptions} SchemaOptions\\n */\\n\\n/**\\n * @typedef {{\\n *  [Path in keyof typeof schema]: {\\n *    [Method in keyof typeof schema[Path]]: {\\n *      [Prop in keyof typeof schema[Path][Method]]: typeof schema[Path][Method][Prop] extends TSchema ?\\n *        Static<typeof schema[Path][Method][Prop]> :\\n *        undefined\\n *    }\\n *  }\\n * }} SchemaType\\n */\\n\\n/**\\n * @typedef {{\\n *  [ComponentType in keyof typeof _components]: {\\n *    [ComponentName in keyof typeof _components[ComponentType]]: typeof _components[ComponentType][ComponentName] extends TSchema ?\\n *      Static<typeof _components[ComponentType][ComponentName]> :\\n *      undefined\\n *  }\\n * }} ComponentType\\n */\\n\\nimport { Type as T, TypeRegistry, Kind } from '@sinclair/typebox'\\nimport { Value } from '@sinclair/typebox/value'\\n\\n/**\\n * @template {TSchema[]} T\\n * @typedef {{\\n *  [Kind]: 'UnionOneOf'\\n *  static: { [K in keyof T]: Static<T[K]> }[number]\\n *  oneOf: T\\n * } & TSchema} TUnionOneOf\\n */\\n\\n/**\\n * @template {TSchema[]} T\\n * @param {[...T]} oneOf\\n * @param {SchemaOptions} [options={}]\\n * @returns {TUnionOneOf<T>}\\n */\\nconst UnionOneOf = (oneOf, options = {}) => {\\n  /**\\n   * Checks if the value matches exactly one schema in the union.\\n   *\\n   * @param {TUnionOneOf<TSchema[]>} schema - The union schema to check against.\\n   * @param {unknown} value - The value to check.\\n   * @returns {boolean} True if the value matches exactly one schema, otherwise false.\\n   */\\n  function UnionOneOfCheck(schema, value) {\\n    return (\\n      1 ===\\n      schema.oneOf.reduce(\\n        (acc, schema) => (Value.Check(schema, value) ? acc + 1 : acc),\\n        0\\n      )\\n    )\\n  }\\n\\n  if (!TypeRegistry.Has('UnionOneOf'))\\n    TypeRegistry.Set('UnionOneOf', UnionOneOfCheck)\\n\\n  return /** @type {TUnionOneOf<typeof oneOf>} */ ({\\n    ...options,\\n    [Kind]: 'UnionOneOf',\\n    oneOf\\n  })\\n}\\n\\nconst cache = {}\\ncache['f40229273b744064836829fd7d98a527'] = {\\n  hello: T.Boolean()\\n}\\ncache['758696ec9f72013302034e82c22e0efb'] = {\\n  error: T.String()\\n}\\ncache['47d3d183ad8bb259a9f8325cf2ab2d5b'] = {\\n  name: T.String()\\n}\\ncache['b635c194e59c78028705df528dea77d7'] = T.String({ 'x-in': 'header' })\\ncache['255a61804302aa4bd8f117420add6257'] = {\\n  auth: cache['b635c194e59c78028705df528dea77d7']\\n}\\ncache['d51eef39907272763131bef48123fb66'] = T.String({ 'x-in': 'path' })\\ncache['9e360b975edf5daeacb6640803b6a4c7'] = {\\n  id: cache['d51eef39907272763131bef48123fb66']\\n}\\ncache['864edea74ad38eac3fa406501729a056'] = T.String({ 'x-in': 'query' })\\ncache['2809284b6e54d0d34017715ffe5636bd'] = T.String()\\ncache['06c090025e83070271cc497e44239ba7'] = T.Array(\\n  cache['2809284b6e54d0d34017715ffe5636bd'],\\n  { 'x-in': 'query' }\\n)\\ncache['c80c06529370bd2a6907120430728ec6'] = {\\n  deepTitle: T.Optional(T.String())\\n}\\ncache['d06bd94c06d00ee7cf3e2a89f0944180'] = T.Object(\\n  cache['c80c06529370bd2a6907120430728ec6'],\\n  {\\n    'x-in': 'query'\\n  }\\n)\\ncache['8da1342213edf1231cfe5f33446d81ee'] = {\\n  filter: cache['864edea74ad38eac3fa406501729a056'],\\n  address: cache['06c090025e83070271cc497e44239ba7'],\\n  deep: cache['d06bd94c06d00ee7cf3e2a89f0944180']\\n}\\ncache['c772fb62a277e4ea942c9eefaefb4655'] = [T.Literal('batman')]\\ncache['a3fe358f59464810fefa67ab749159a7'] = [T.Literal('joker')]\\ncache['8a48859dc4294a0307f483f076bba742'] = [\\n  T.Union(cache['c772fb62a277e4ea942c9eefaefb4655']),\\n  T.Union(cache['a3fe358f59464810fefa67ab749159a7'])\\n]\\ncache['f4b0f2ddbd1b2fbe02c10d8bd3dd3e37'] = {\\n  name: T.String(),\\n  age: T.Optional(T.Number()),\\n  gender: T.Union(cache['8a48859dc4294a0307f483f076bba742'])\\n}\\ncache['5066358f248daf33be676e893f6ad939'] = {\\n  title: T.String(),\\n  address: T.String()\\n}\\ncache['a4d5c21a651696fabb83fc7ba1c00c6d'] = T.Object(\\n  cache['5066358f248daf33be676e893f6ad939']\\n)\\ncache['1fe4d5edb2e4234b6fa4c15f6442088d'] = {\\n  human: T.Object(cache['f4b0f2ddbd1b2fbe02c10d8bd3dd3e37']),\\n  address: T.Array(cache['a4d5c21a651696fabb83fc7ba1c00c6d']),\\n  recursive: T.Object({})\\n}\\ncache['c31c87a08a18f5fd1f28efc42581b68a'] = {\\n  id: T.Optional(T.String())\\n}\\ncache['734381ed9db8585a070b030440190d32'] = {\\n  deepTitle: T.String()\\n}\\ncache['3a5ec6fa1d653f40ca7005bcd5e1f154'] = {\\n  filter: T.String(),\\n  address: T.Array(cache['2809284b6e54d0d34017715ffe5636bd']),\\n  deep: T.Object(cache['734381ed9db8585a070b030440190d32'])\\n}\\ncache['e28a00e55fde07ae47133be85f41bd04'] = {\\n  params: T.Object(cache['c31c87a08a18f5fd1f28efc42581b68a']),\\n  query: T.Object(cache['3a5ec6fa1d653f40ca7005bcd5e1f154']),\\n  body: T.Object(cache['1fe4d5edb2e4234b6fa4c15f6442088d'])\\n}\\n\\nconst schema = {\\n  '/hello': {\\n    GET: {\\n      args: T.Void(),\\n      data: T.Any({ 'x-status-code': '200' }),\\n      error: T.Union([T.Any({ 'x-status-code': 'default' })])\\n    }\\n  },\\n  '/hello-typed': {\\n    GET: {\\n      args: T.Void(),\\n      data: T.Object(cache['f40229273b744064836829fd7d98a527'], {\\n        'x-status-code': '200',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([\\n        T.Object(cache['758696ec9f72013302034e82c22e0efb'], {\\n          'x-status-code': '404',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    }\\n  },\\n  '/multiple-content': {\\n    GET: {\\n      args: T.Void(),\\n      data: T.Object(cache['47d3d183ad8bb259a9f8325cf2ab2d5b'], {\\n        'x-status-code': '200',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([\\n        T.Object(cache['758696ec9f72013302034e82c22e0efb'], {\\n          'x-status-code': '404',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    }\\n  },\\n  '/some-route/{id}': {\\n    POST: {\\n      args: T.Object({\\n        headers: T.Object(cache['255a61804302aa4bd8f117420add6257']),\\n        params: T.Object(cache['9e360b975edf5daeacb6640803b6a4c7']),\\n        query: T.Object(cache['8da1342213edf1231cfe5f33446d81ee']),\\n        body: T.Object(cache['1fe4d5edb2e4234b6fa4c15f6442088d'], {\\n          'x-content-type': 'application/json'\\n        })\\n      }),\\n      data: T.Object(cache['e28a00e55fde07ae47133be85f41bd04'], {\\n        'x-status-code': '201',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([T.Any({ 'x-status-code': 'default' })])\\n    }\\n  }\\n}\\n\\nconst _components = {\\n  schemas: {\\n    'def-0': T.Array(cache['a4d5c21a651696fabb83fc7ba1c00c6d'])\\n  }\\n}\\n\\nexport { schema, _components as components }\\n"
`;

exports[`petstore.json 1`] = `
"/* eslint-disable */\\n// This document was generated automatically by openapi-box\\n\\n/**\\n * @typedef {import('@sinclair/typebox').TSchema} TSchema\\n */\\n\\n/**\\n * @template {TSchema} T\\n * @typedef {import('@sinclair/typebox').Static<T>} Static\\n */\\n\\n/**\\n * @typedef {import('@sinclair/typebox').SchemaOptions} SchemaOptions\\n */\\n\\n/**\\n * @typedef {{\\n *  [Path in keyof typeof schema]: {\\n *    [Method in keyof typeof schema[Path]]: {\\n *      [Prop in keyof typeof schema[Path][Method]]: typeof schema[Path][Method][Prop] extends TSchema ?\\n *        Static<typeof schema[Path][Method][Prop]> :\\n *        undefined\\n *    }\\n *  }\\n * }} SchemaType\\n */\\n\\n/**\\n * @typedef {{\\n *  [ComponentType in keyof typeof _components]: {\\n *    [ComponentName in keyof typeof _components[ComponentType]]: typeof _components[ComponentType][ComponentName] extends TSchema ?\\n *      Static<typeof _components[ComponentType][ComponentName]> :\\n *      undefined\\n *  }\\n * }} ComponentType\\n */\\n\\nimport { Type as T, TypeRegistry, Kind } from '@sinclair/typebox'\\nimport { Value } from '@sinclair/typebox/value'\\n\\n/**\\n * @template {TSchema[]} T\\n * @typedef {{\\n *  [Kind]: 'UnionOneOf'\\n *  static: { [K in keyof T]: Static<T[K]> }[number]\\n *  oneOf: T\\n * } & TSchema} TUnionOneOf\\n */\\n\\n/**\\n * @template {TSchema[]} T\\n * @param {[...T]} oneOf\\n * @param {SchemaOptions} [options={}]\\n * @returns {TUnionOneOf<T>}\\n */\\nconst UnionOneOf = (oneOf, options = {}) => {\\n  /**\\n   * Checks if the value matches exactly one schema in the union.\\n   *\\n   * @param {TUnionOneOf<TSchema[]>} schema - The union schema to check against.\\n   * @param {unknown} value - The value to check.\\n   * @returns {boolean} True if the value matches exactly one schema, otherwise false.\\n   */\\n  function UnionOneOfCheck(schema, value) {\\n    return (\\n      1 ===\\n      schema.oneOf.reduce(\\n        (acc, schema) => (Value.Check(schema, value) ? acc + 1 : acc),\\n        0\\n      )\\n    )\\n  }\\n\\n  if (!TypeRegistry.Has('UnionOneOf'))\\n    TypeRegistry.Set('UnionOneOf', UnionOneOfCheck)\\n\\n  return /** @type {TUnionOneOf<typeof oneOf>} */ ({\\n    ...options,\\n    [Kind]: 'UnionOneOf',\\n    oneOf\\n  })\\n}\\n\\nconst cache = {}\\ncache['03e858838eb430edda802cc71646963b'] = T.Optional(\\n  T.Integer({ format: 'int32', 'x-in': 'query' })\\n)\\ncache['723300ad0470e6ce673b85751ba5bcc7'] = {\\n  limit: cache['03e858838eb430edda802cc71646963b']\\n}\\ncache['5bfbeb4f1040ffcb05449e459a2b6e29'] = {\\n  id: T.Integer({ format: 'int64' }),\\n  name: T.String(),\\n  tag: T.Optional(T.String())\\n}\\ncache['e7066718f2cec7911b7492b026db3603'] = T.Object(\\n  cache['5bfbeb4f1040ffcb05449e459a2b6e29']\\n)\\ncache['ac3205be0e87bb06e17139ad412c51f8'] = {\\n  code: T.Integer({ format: 'int32' }),\\n  message: T.String()\\n}\\ncache['a09d70c81606db20589569c60c981b9a'] = T.String({ 'x-in': 'path' })\\ncache['5813dcb66e7e849794b7e10cf18cc4b4'] = {\\n  petId: cache['a09d70c81606db20589569c60c981b9a']\\n}\\ncache['07e889497aac2beab329a2eb5fc61dcc'] = T.Integer({\\n  format: 'int32',\\n  'x-in': 'query'\\n})\\ncache['c79bf6c101e6f1ae8d144f277145f13b'] = T.Integer({\\n  format: 'int32',\\n  'x-in': 'query'\\n})\\n\\nconst schema = {\\n  '/pets': {\\n    GET: {\\n      args: T.Optional(\\n        T.Object({\\n          query: T.Optional(T.Object(cache['723300ad0470e6ce673b85751ba5bcc7']))\\n        })\\n      ),\\n      data: T.Array(cache['e7066718f2cec7911b7492b026db3603'], {\\n        'x-status-code': '200',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([\\n        T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {\\n          'x-status-code': 'default',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    },\\n    POST: {\\n      args: T.Void(),\\n      data: T.Any({ 'x-status-code': '201' }),\\n      error: T.Union([\\n        T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {\\n          'x-status-code': 'default',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    }\\n  },\\n  '/pets/{petId}': {\\n    GET: {\\n      args: T.Object({\\n        params: T.Object(cache['5813dcb66e7e849794b7e10cf18cc4b4'])\\n      }),\\n      data: T.Object(cache['5bfbeb4f1040ffcb05449e459a2b6e29'], {\\n        'x-status-code': '200',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([\\n        T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {\\n          'x-status-code': 'default',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    }\\n  }\\n}\\n\\nconst _components = {\\n  parameters: {\\n    skipParam: cache['07e889497aac2beab329a2eb5fc61dcc'],\\n    limitParam: cache['c79bf6c101e6f1ae8d144f277145f13b']\\n  },\\n  responses: {\\n    NotFound: T.Any({}),\\n    IllegalInput: T.Any({}),\\n    GeneralError: T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {\\n      'x-content-type': 'application/json'\\n    })\\n  },\\n  requestBodies: {\\n    Pet: T.Object(cache['5bfbeb4f1040ffcb05449e459a2b6e29'], {\\n      'x-content-type': 'application/json'\\n    })\\n  },\\n  schemas: {\\n    Error: T.Object(cache['ac3205be0e87bb06e17139ad412c51f8']),\\n    Pet: T.Object(cache['5bfbeb4f1040ffcb05449e459a2b6e29']),\\n    Pets: T.Array(cache['e7066718f2cec7911b7492b026db3603'])\\n  }\\n}\\n\\nexport { schema, _components as components }\\n"
`;

exports[`petstore.yaml 1`] = `
"/* eslint-disable */\\n// This document was generated automatically by openapi-box\\n\\n/**\\n * @typedef {import('@sinclair/typebox').TSchema} TSchema\\n */\\n\\n/**\\n * @template {TSchema} T\\n * @typedef {import('@sinclair/typebox').Static<T>} Static\\n */\\n\\n/**\\n * @typedef {import('@sinclair/typebox').SchemaOptions} SchemaOptions\\n */\\n\\n/**\\n * @typedef {{\\n *  [Path in keyof typeof schema]: {\\n *    [Method in keyof typeof schema[Path]]: {\\n *      [Prop in keyof typeof schema[Path][Method]]: typeof schema[Path][Method][Prop] extends TSchema ?\\n *        Static<typeof schema[Path][Method][Prop]> :\\n *        undefined\\n *    }\\n *  }\\n * }} SchemaType\\n */\\n\\n/**\\n * @typedef {{\\n *  [ComponentType in keyof typeof _components]: {\\n *    [ComponentName in keyof typeof _components[ComponentType]]: typeof _components[ComponentType][ComponentName] extends TSchema ?\\n *      Static<typeof _components[ComponentType][ComponentName]> :\\n *      undefined\\n *  }\\n * }} ComponentType\\n */\\n\\nimport { Type as T, TypeRegistry, Kind } from '@sinclair/typebox'\\nimport { Value } from '@sinclair/typebox/value'\\n\\n/**\\n * @template {TSchema[]} T\\n * @typedef {{\\n *  [Kind]: 'UnionOneOf'\\n *  static: { [K in keyof T]: Static<T[K]> }[number]\\n *  oneOf: T\\n * } & TSchema} TUnionOneOf\\n */\\n\\n/**\\n * @template {TSchema[]} T\\n * @param {[...T]} oneOf\\n * @param {SchemaOptions} [options={}]\\n * @returns {TUnionOneOf<T>}\\n */\\nconst UnionOneOf = (oneOf, options = {}) => {\\n  /**\\n   * Checks if the value matches exactly one schema in the union.\\n   *\\n   * @param {TUnionOneOf<TSchema[]>} schema - The union schema to check against.\\n   * @param {unknown} value - The value to check.\\n   * @returns {boolean} True if the value matches exactly one schema, otherwise false.\\n   */\\n  function UnionOneOfCheck(schema, value) {\\n    return (\\n      1 ===\\n      schema.oneOf.reduce(\\n        (acc, schema) => (Value.Check(schema, value) ? acc + 1 : acc),\\n        0\\n      )\\n    )\\n  }\\n\\n  if (!TypeRegistry.Has('UnionOneOf'))\\n    TypeRegistry.Set('UnionOneOf', UnionOneOfCheck)\\n\\n  return /** @type {TUnionOneOf<typeof oneOf>} */ ({\\n    ...options,\\n    [Kind]: 'UnionOneOf',\\n    oneOf\\n  })\\n}\\n\\nconst cache = {}\\ncache['03e858838eb430edda802cc71646963b'] = T.Optional(\\n  T.Integer({ format: 'int32', 'x-in': 'query' })\\n)\\ncache['723300ad0470e6ce673b85751ba5bcc7'] = {\\n  limit: cache['03e858838eb430edda802cc71646963b']\\n}\\ncache['5bfbeb4f1040ffcb05449e459a2b6e29'] = {\\n  id: T.Integer({ format: 'int64' }),\\n  name: T.String(),\\n  tag: T.Optional(T.String())\\n}\\ncache['e7066718f2cec7911b7492b026db3603'] = T.Object(\\n  cache['5bfbeb4f1040ffcb05449e459a2b6e29']\\n)\\ncache['ac3205be0e87bb06e17139ad412c51f8'] = {\\n  code: T.Integer({ format: 'int32' }),\\n  message: T.String()\\n}\\ncache['a09d70c81606db20589569c60c981b9a'] = T.String({ 'x-in': 'path' })\\ncache['5813dcb66e7e849794b7e10cf18cc4b4'] = {\\n  petId: cache['a09d70c81606db20589569c60c981b9a']\\n}\\ncache['07e889497aac2beab329a2eb5fc61dcc'] = T.Integer({\\n  format: 'int32',\\n  'x-in': 'query'\\n})\\ncache['c79bf6c101e6f1ae8d144f277145f13b'] = T.Integer({\\n  format: 'int32',\\n  'x-in': 'query'\\n})\\n\\nconst schema = {\\n  '/pets': {\\n    GET: {\\n      args: T.Optional(\\n        T.Object({\\n          query: T.Optional(T.Object(cache['723300ad0470e6ce673b85751ba5bcc7']))\\n        })\\n      ),\\n      data: T.Array(cache['e7066718f2cec7911b7492b026db3603'], {\\n        'x-status-code': '200',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([\\n        T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {\\n          'x-status-code': 'default',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    },\\n    POST: {\\n      args: T.Void(),\\n      data: T.Any({ 'x-status-code': '201' }),\\n      error: T.Union([\\n        T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {\\n          'x-status-code': 'default',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    }\\n  },\\n  '/pets/{petId}': {\\n    GET: {\\n      args: T.Object({\\n        params: T.Object(cache['5813dcb66e7e849794b7e10cf18cc4b4'])\\n      }),\\n      data: T.Object(cache['5bfbeb4f1040ffcb05449e459a2b6e29'], {\\n        'x-status-code': '200',\\n        'x-content-type': 'application/json'\\n      }),\\n      error: T.Union([\\n        T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {\\n          'x-status-code': 'default',\\n          'x-content-type': 'application/json'\\n        })\\n      ])\\n    }\\n  }\\n}\\n\\nconst _components = {\\n  parameters: {\\n    skipParam: cache['07e889497aac2beab329a2eb5fc61dcc'],\\n    limitParam: cache['c79bf6c101e6f1ae8d144f277145f13b']\\n  },\\n  responses: {\\n    NotFound: T.Any({}),\\n    IllegalInput: T.Any({}),\\n    GeneralError: T.Object(cache['ac3205be0e87bb06e17139ad412c51f8'], {\\n      'x-content-type': 'application/json'\\n    })\\n  },\\n  requestBodies: {\\n    Pet: T.Object(cache['5bfbeb4f1040ffcb05449e459a2b6e29'], {\\n      'x-content-type': 'application/json'\\n    })\\n  },\\n  schemas: {\\n    Error: T.Object(cache['ac3205be0e87bb06e17139ad412c51f8']),\\n    Pet: T.Object(cache['5bfbeb4f1040ffcb05449e459a2b6e29']),\\n    Pets: T.Array(cache['e7066718f2cec7911b7492b026db3603'])\\n  }\\n}\\n\\nexport { schema, _components as components }\\n"
`;
